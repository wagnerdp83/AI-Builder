---
import { Menu, X, Star } from '@lucide/astro';

const navigation = [
  { name: 'Home', href: '#' },
  { name: 'How It Works', href: '#' },
  { name: 'Case Studies', href: '#' },
  { name: 'Pricing', href: '#' },
  { name: 'About', href: '#' },
  { name: 'Contact', href: '#' }
]
const ctaText = 'Get Your Free Audit';
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-sm transition-all duration-300" id="header">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4 md:py-6">
      <div class="flex-shrink-0">
        <a href="/" class="text-2xl font-bold text-blue-800">Agency Logo</a>
      </div>

      <nav class="hidden md:flex space-x-8">
        {navigation.map((item: { name: string; href: string }) => (
          <a
            
            href={item.href}
            class="text-gray-700 hover:text-blue-800 transition-colors duration-200 relative group"
          >
            {item.name}
            <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-800 transition-all duration-200 group-hover:w-full"></span>
          </a>
        ))}
      </nav>

      <div class="hidden md:block">
        <a
          href="#"
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-orange-500 hover:bg-orange-600 transition-colors duration-200 animate-pulse"
        >
          {ctaText}
        </a>
      </div>

      <button id="mobile-menu-toggle" class="md:hidden">
        <Menu class="h-6 w-6" id="menu-icon" />
        <X class="h-6 w-6 hidden" id="close-icon" />
      </button>
    </div>
  </div>

  <div id="mobile-menu" class="hidden md:hidden bg-white/90 backdrop-blur-sm">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      {navigation.map((item: { name: string; href: string }) => (
        <a
          
          href={item.href}
          class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-800 transition-colors duration-200"
        >
          {item.name}
        </a>
      ))}
      <a
        href="#"
        class="block px-3 py-2 text-base font-medium text-white bg-orange-500 hover:bg-orange-600 transition-colors duration-200 rounded-md mt-2"
      >
        {ctaText}
      </a>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('header')
const toggle = document.getElementById('mobile-menu-toggle')
const menu = document.getElementById('mobile-menu')
const menuIcon = document.getElementById('menu-icon')
const closeIcon = document.getElementById('close-icon');

    if (!header || !toggle || !menu || !menuIcon || !closeIcon) return;

    // Mobile menu toggle
    toggle.addEventListener('click', () => {
      const isOpen = !menu.classList.contains('hidden');
      menu.classList.toggle('hidden');
      menuIcon.classList.toggle('hidden', isOpen);
      closeIcon.classList.toggle('hidden', !isOpen);
    });

    // Header shrink on scroll
    let lastScroll = 0;
    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;

      if (currentScroll <= 0) {
        header.classList.remove('py-2', 'md:py-3');
        header.classList.add('py-4', 'md:py-6');
      } else if (currentScroll > lastScroll && !header.classList.contains('py-2')) {
        header.classList.remove('py-4', 'md:py-6');
        header.classList.add('py-2', 'md:py-3');
      } else if (currentScroll < lastScroll && header.classList.contains('py-2')) {
        header.classList.remove('py-2', 'md:py-3');
        header.classList.add('py-4', 'md:py-6');
      }

      lastScroll = currentScroll;
    });

    // Smooth scroll for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault()
const targetId = this.getAttribute('href');
        if (targetId === '#') return
const targetElement = document.querySelector(targetId);
        if (!targetElement) return;

        window.scrollTo({
          top: targetElement.offsetTop - header.offsetHeight,
          behavior: 'smooth'
        });

        // Close mobile menu if open
        if (!menu.classList.contains('hidden')) {
          menu.classList.add('hidden');
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
        }
      });
    });
  });
</script>