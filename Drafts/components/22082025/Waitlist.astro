---
import { Mail, CheckCircle, ArrowRight, Loader2 } from '@lucide/astro';

const headline = "Join the FoxFreela Waitlist";
const subheadline = "Be among the first to experience AI-powered landing page creation. Limited spots available for early access.";
const ctaText = "Join Waitlist";
const successMessage = "You're on the list! We'll notify you when FoxFreela launches.";
const features = [
  "Early access to AI landing page builder",
  "Exclusive founding member benefits",
  "Priority support and onboarding",
  "Special launch pricing"
];
---

<section id="join-waitlist" class="py-20 bg-gradient-to-br from-[#0A192F] to-[#1E3A8A] text-white">
  <div class="container mx-auto px-4">
    <div class="max-w-4xl mx-auto text-center">
      <h2 class="text-3xl md:text-4xl font-bold mb-4">
        {headline}
      </h2>
      <p class="text-xl text-gray-300 mb-12 max-w-2xl mx-auto">
        {subheadline}
      </p>

      <div class="grid lg:grid-cols-2 gap-12 items-center">
        <!-- Form Section -->
        <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20">
          <form id="waitlist-form" class="space-y-6">
            <div>
              <label for="email" class="block text-sm font-medium text-gray-300 mb-2 text-left">
                Email Address
              </label>
              <div class="relative">
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  placeholder="your@email.com"
                  class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#FF6B35] focus:border-transparent transition-all duration-300"
                />
                <Mail class="absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
              </div>
            </div>

            <div>
              <label for="business-type" class="block text-sm font-medium text-gray-300 mb-2 text-left">
                What type of business do you have?
              </label>
              <select
                id="business-type"
                name="business-type"
                class="w-full px-4 py-3 bg-white/20 border border-white/30 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-[#FF6B35] focus:border-transparent transition-all duration-300"
              >
                <option value="">Select your business type</option>
                <option value="freelancer">Freelancer / Solo Professional</option>
                <option value="agency">Marketing Agency</option>
                <option value="startup">Startup</option>
                <option value="enterprise">Enterprise</option>
                <option value="other">Other</option>
              </select>
            </div>

            <button
              type="submit"
              class="w-full bg-[#FF6B35] hover:bg-[#E65A2C] text-white py-3 px-6 rounded-lg font-medium transition-all duration-300 transform hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2 group"
            >
              <span>{ctaText}</span>
              <ArrowRight class="h-5 w-5 group-hover:translate-x-1 transition-transform duration-300" />
            </button>
          </form>

          <!-- Success Message -->
          <div id="success-message" class="hidden text-center py-8">
            <CheckCircle class="h-16 w-16 text-green-400 mx-auto mb-4" />
            <h3 class="text-xl font-semibold mb-2">{successMessage}</h3>
            <p class="text-gray-300">Check your email for confirmation.</p>
          </div>
        </div>

        <!-- Features Section -->
        <div class="text-left">
          <h3 class="text-2xl font-semibold mb-6">What you'll get:</h3>
          <div class="space-y-4">
            {features.map((feature) => (
              <div class="flex items-start space-x-3">
                <CheckCircle class="h-6 w-6 text-[#FF6B35] mt-0.5 flex-shrink-0" />
                <span class="text-gray-300">{feature}</span>
              </div>
            ))}
          </div>

          <!-- Stats -->
          <div class="mt-8 grid grid-cols-2 gap-6">
            <div class="text-center">
              <div class="text-3xl font-bold text-[#FF6B35]">500+</div>
              <div class="text-sm text-gray-400">Already waiting</div>
            </div>
            <div class="text-center">
              <div class="text-3xl font-bold text-[#FF6B35]">30</div>
              <div class="text-sm text-gray-400">Days to launch</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('waitlist-form') as HTMLFormElement;
    const successMessage = document.getElementById('success-message') as HTMLElement;
    
    if (!form || !successMessage) {
      console.warn('Waitlist form elements not found');
      return;
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const email = formData.get('email');
      const businessType = formData.get('business-type');
      
      if (!email) {
        return;
      }

      // Simulate form submission
      const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      if (submitBtn) {
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span>Joining...</span><Loader2 class="h-5 w-5 animate-spin ml-2" />';
      }

      // Simulate API call
      setTimeout(() => {
        // Show success message
        form.classList.add('hidden');
        successMessage.classList.remove('hidden');
        
        // Reset form
        form.reset();
        
        // Log the submission (in real app, this would go to your backend)
        console.log('Waitlist signup:', { email, businessType });
      }, 1500);
    });

    // Input focus effects
    const inputs = form.querySelectorAll('input, select');
    inputs.forEach(input => {
      const inputElement = input as HTMLInputElement | HTMLSelectElement;
      inputElement.addEventListener('focus', () => {
        inputElement.style.boxShadow = '0 0 0 3px rgba(255, 107, 53, 0.1)';
      });

      inputElement.addEventListener('blur', () => {
        inputElement.style.boxShadow = 'none';
      });
    });
  });
</script>
