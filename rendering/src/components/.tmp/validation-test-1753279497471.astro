Sure! Below is a production-ready Astro component named `Menu` that includes the items Home, Next, Test, Abra, and Bern.


---
// Menu.astro
const menuItems = [
  { name: 'Home', href: '/' },
  { name: 'Next', href: '/next' },
  { name: 'Test', href: '/test' },
  { name: 'Abra', href: '/abra' },
  { name: 'Bern', href: '/bern' },
];
---

<section class="menu">
  <nav>
    <ul>
      {menuItems.map((item) => (
        <li>
          <a href={item.href}>{item.name}</a>
        </li>
      ))}
    </ul>
  </nav>
</section>

<style>
  .menu {
    background-color: #333;
    padding: 1rem;
  }

  .menu nav ul {
    list-style: none;
    display: flex;
    gap: 1rem;
    margin: 0;
    padding: 0;
  }

  .menu nav ul li {
    margin: 0;
  }

  .menu nav ul li a {
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    transition: background-color 0.3s;
  }

  .menu nav ul li a:hover {
    background-color: #555;
  }
</style>


### Explanation:
1. **Component Definition**: The component is defined with a script section that contains an array of menu items.
2. **HTML Structure**: The HTML structure includes a `section` with a `nav` element containing an unordered list (`ul`). Each list item (`li`) contains an anchor (`a`) tag with the appropriate `href` and text.
3. **Styling**: Basic CSS is included to style the menu, including background color, padding, flexbox for layout, and hover effects.

You can use this component in your Astro project by importing it into your desired layout or page file. For example:


---
import Menu from './components/Menu.astro';
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Astro Site</title>
</head>
<body>
  <Menu />
  <!-- Other content -->
</body>
</html>


This will render the menu with the specified items in your Astro site.